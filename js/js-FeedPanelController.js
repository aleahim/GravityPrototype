var FeedPanelController = Class.extend({    init: function() {        this.SetListVisualization();                Events.ContainerCreatePointer('container_create');        LandingZones.AddZone('#wormhole', [DataElement, HTMLContainer], 0, 50, 50, 0);    },    GetCarousel: function() {        return this.Carousel;    },    SetListVisualization: function() {        var obj = this;        this.Carousel = new Carousel('#feed_panel', 'feed_panel', 6);        var feeds = FeedElements.arr();        for (var a in feeds) {            var feed = feeds[a];            if (feed.GetNotes() == '1') {                continue;            }            var tplID = obj.GetCarousel().GetElementUID(feed);            this.GetCarousel().AddElement(feed, 'feed_panel_brick', {                UID : tplID            });            UI.ScanTemplate(feed, tplID);            var childUID = UI.GetChild(tplID, 'Image');            feed.Hover(childUID , tplID);            feed.Out(childUID);            var drag = new Pointer(childUID);            drag            .bind('dragend', obj.DragAndDropFeed)            .bind('move', obj.DragFeed);        }        this.GetCarousel().ShowActive();    },    DragFeed: function (event) {        var point = AbsParent(event.HTMLel);        event.HTMLel.css({            left: event.EndX - point.x - 23 + event.ScrollLeft,            top: event.EndY - point.y - 23 + event.ScrollTop        });    },    DragAndDropFeed: function(event) {        var feed_id = UI.GetParent(event.id);        feed_id = UI.TPLmap.get(feed_id);        var feed = FeedElements.get(feed_id);        if (feed.GetLoadedElements() == feed.GetTotalElements()) {            FeedPanel.GetCarousel().ShowActive();            return;        }        App.blockUI();        var exclude = DataElements.LoadedDOs;        var x = $('#'+event.id).offset().left;        var y = $('#'+event.id).offset().top;        $.post(gateway + "&do=output", {            "exclude" : exclude.join(','),            "data_xml_feed_id" : feed.GetDBid()        }, function(data) {            var feed_items = data.split(';');            var loaded_items = $.grep(feed_items.slice(), function(n){                return(n);            });            var promise = ServerLoading.LoadDataObjects(feed_items, App.LOAD_BUFFER_SIZE, feed.GetUID(), feed.GetLoadX(), feed.GetLoadY());            promise.done(function() {                var attr = GravityElements.GetAttr(feed.GetType() + ' ' + feed.GetTitle());                var c = Containers.CreateHTMLContainer('default', App.CONTAINER_TYPE_INPUT,                    new Dictionary(new Array(attr))                    );                c.Reposition(x, y);                //c.SelectAttribute(attr.GetUID());                for (var i in loaded_items) {                    var id = loaded_items[i];                    id = DataElements.IDsMap.get(id);                                        var DE = DataElements.get(id);                    c.AddElement(DE);                }                c.DefaultColors();                c.Arrange();                App.unblockUI();            });        });    },    GetContainersPanel: function() {        return this.ContainersPanel;    },    SetContainersVisualization: function() {        $('.panel_buttons').css({            width: App.SCREEN_WIDTH - 230        });        this.ContainersPanel = new ContainersPanel('#feed_panel', 'feed_panel', {});        var chain = new Array();        var feeds = FeedElements.arr();        App.blockUI();        for (var a in feeds) {            var feed = feeds[a];            var attr = GravityElements.GetAttr(feed.GetType() + ' ' + feed.GetTitle());            var c = Containers.CreateHTMLContainer('feedpanel', App.CONTAINER_TYPE_LOAD,                new Dictionary(new Array(attr))                );            c.SelectAttribute(attr.GetUID());            c.SetFeedID(feed.GetUID());            this.AddContainer(c);            var promise = ServerLoading.LoadDataObjects(feed.GetElementsIDs(), 50, feed.GetUID(), 0, 0);            chain.push(promise);        }        $.when.apply(null, chain).then(function() {            Grouping.Move();            App.unblockUI();        });    },        InWormhole: function(x, y, item) {        if (this.IsInWormhole(x, y)) {            if (item instanceof DataElement) {                item.Destroy();            }            else if (item instanceof Container) {                item.DestroyElements();                item.Destroy();            }            this.ChangeWormholeColor('outside');        }    },    ChangeWormholeColor: function(type) {        switch(type) {            case 'inside':                $('#wormhole').css({                    backgroundColor: '#CB540A',                    color: "black"                });                break;            case 'outside':                $('#wormhole').css({                    backgroundColor: '#F2F2F2',                    color: "#CB540A"                });                break;        }    },        IsInWormhole: function(x, y) {        var box_x = $('#wormhole').position().left;        var box_y = $('#wormhole').position().top;        var box_x_end = box_x + $('#wormhole').width();        var box_y_end = box_y + $('#wormhole').height();                //console.log(x,box_x,box_x_end, y,box_y, box_y_end);                if (x > box_x && x < box_x_end && y > box_y && y < box_y_end) {            return true;        }                return false;            },              RemoveLoadPanel: function() {        $('#load_panel_frame').remove();    },        ShowLoadPanel: function(feeds_info) {        FeedPanel.RemoveLoadPanel();                var showCount = 4;        if (feeds_info.length < 4) {            showCount = feeds_info.length;        }                this.LoadCarousel = new Carousel('#load_panel', 'load_panel', showCount);        $('<input type="button" value="close" />').css({            'position':'absolute',             'bottom' : '15px',            'left' : '2px'        }).click(function(){            FeedPanel.RemoveLoadPanel();        }).appendTo('#load_panel_frame');        $('<input type="button" id="load_panel_button" value="+'+ServerLoading.items_to_load+'" />').css({            'position':'absolute',             'bottom' : '35px',            'left' : '2px'        }).click(function(){            FeedPanel.RemoveLoadPanel();                        ServerLoading.Confirm();        }).appendTo('#load_panel_frame');             $.tmpl('server_load_dialog', {            'title': ServerLoading.Attrs        }).appendTo('#page');        var obj = this;        var counter = 1;        $(feeds_info).each(function(k, feedDB) {            counter++;            var feed = FeedElements.GetByDBid(feedDB.feed_id);console.log(feedDB);            feed.SetItemsToLoad(feedDB.feed_items);            var id = obj.LoadCarousel.GetElementUID(feed);            obj.LoadCarousel.AddElement(feed, 'feed_panel_brick', {                UID : id            });            var brick = $('#'+id);            var childUID = feed.GetUID() + '_load_img';            brick.find('img').attr('id', childUID).attr('src', feed.GetImage());            brick.find('span').text(feed.GetItemsToLoad().length + '/' + feed.GetTotalElements());            brick.find('span.title').text(feed.GetTitle());                        feed.Hover(childUID , id);            feed.Out(childUID);            $.tmpl('server_load_dialog_brick', {                'id' : 'loaddialog' + feed.GetUID(),                'image': feed.GetImage(),                'label': feed.GetItemsToLoad().length + '/' + feed.GetTotalElements(),                'title': feed.GetTitle()            }).appendTo('#feed_dialog');            var drag = new Pointer(childUID);            drag            .bind('dragend', obj.DragAndDropFeedLoad)            .bind('pointerclick', obj.DragAndDropFeedLoad)            .bind('move', obj.DragFeed);            var click = new Pointer('loaddialog' + feed.GetUID());            click            .bind('pointerclick', obj.DragAndDropFeedLoad)            .bind('move', obj.DragFeed);            if (counter % 2) {                $.tmpl('server_load_dialog_delim', {}).appendTo('#feed_dialog');            }        });        $.tmpl('server_load_dialog_close', {}).appendTo('#feed_dialog');        $.tmpl('server_load_dialog_load', { count: ServerLoading.items_to_load }).appendTo('#feed_dialog');        $( "#feed_dialog" ).dialog({            width: '750px',            modal: true        });        this.LoadCarousel.ShowActive();                $('#load_panel_frame').height(this.LoadCarousel.HTMLel.height() + 60);    },    DragAndDropFeedLoad: function(event) {        App.blockUI();                var feed = FeedElements.get(event.id.replace('_load_img', ''));        if (!feed) {            feed = FeedElements.get(event.id.replace('loaddialog', ''));        }                var buffer_size = 50;        var len = feed.GetItemsToLoad().length;                var promise = ServerLoading.LoadDataObjects(feed.GetItemsToLoad(), buffer_size, feed.GetUID(), feed.GetLoadX(), feed.GetLoadY());        promise.done(function(){            $('#feed_dialog').find('#loaddialog' + feed.GetUID()).remove();            FeedPanel.LoadCarousel.RemoveElement(feed);            ServerLoading.items_to_load -= len;            $('#load_panel_button').attr('value', '+'+ServerLoading.items_to_load);            if (FeedPanel.LoadCarousel.panel_items.length == 0) {                ServerLoading.feeds_info = new Array();                FeedPanel.RemoveLoadPanel();                $('#feed_dialog').dialog('destroy');                $('#feed_dialog').remove()            }                        Grouping.Move();            App.unblockUI();        });    },    UpdateFeedsInfo: function(feed_id, loaded_ids, loaded) {        $('#feed_'+feed_id+' div').attr('loaded', parseInt($('#feed_'+feed_id+' div').attr('loaded')) + parseInt(loaded));                $('#feed_'+feed_id+' div').attr('exclude', $('#feed_'+feed_id+' div').attr('exclude')+loaded_ids);        this.UpdateFeedsLoaded();    },        UpdateFeedsLoaded: function() {        $('#feed_panel .panel_info').each(function() {            $(this).parent().find('span').html($(this).attr('loaded') + '/' + $(this).attr('count'));                        if ($(this).attr('loaded') == $(this).attr('count')) {                $(this).parent().find('img').css({                    'opacity' : '0.2',                    'filter':'alpha(opacity=20)'                });            }            else {                if ($(this).attr('loaded') != 0) {                    $(this).parent().find('img').css({                        'opacity' : '0.7',                        'filter':'alpha(opacity=70)'                    });                }            }        });            }});